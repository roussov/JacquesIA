{"ast":null,"code":"var _jsxFileName = \"/Users/vincent.rs/git-vince/JacquesIA/client/src/components/UI/LoadingSpinner.tsx\";\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst SpinnerContainer = styled.div`\n  display: inline-block;\n  width: ${({\n  size\n}) => {\n  switch (size) {\n    case 'small':\n      return '16px';\n    case 'medium':\n      return '24px';\n    case 'large':\n      return '32px';\n    case 'xl':\n      return '48px';\n    default:\n      return '24px';\n  }\n}};\n  height: ${({\n  size\n}) => {\n  switch (size) {\n    case 'small':\n      return '16px';\n    case 'medium':\n      return '24px';\n    case 'large':\n      return '32px';\n    case 'xl':\n      return '48px';\n    default:\n      return '24px';\n  }\n}};\n`;\n_c = SpinnerContainer;\nconst Spinner = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 2px solid ${({\n  theme,\n  color\n}) => color || theme.colors.secondary[200]};\n  border-top: 2px solid ${({\n  theme,\n  color\n}) => color || theme.colors.primary[500]};\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n`;\n_c2 = Spinner;\nconst SpinnerWithText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${({\n  theme\n}) => theme.spacing[3]};\n`;\n_c3 = SpinnerWithText;\nconst SpinnerText = styled.span`\n  font-size: ${({\n  theme\n}) => theme.typography.fontSize.sm};\n  color: ${({\n  theme\n}) => theme.colors.text.secondary};\n  font-weight: ${({\n  theme\n}) => theme.typography.fontWeight.medium};\n`;\n_c4 = SpinnerText;\nconst LoadingSpinner = ({\n  size = 'medium',\n  color,\n  text,\n  className\n}) => {\n  const spinnerElement = /*#__PURE__*/_jsxDEV(SpinnerContainer, {\n    size: size,\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  if (text) {\n    return /*#__PURE__*/_jsxDEV(SpinnerWithText, {\n      children: [spinnerElement, /*#__PURE__*/_jsxDEV(SpinnerText, {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n  return spinnerElement;\n};\n_c5 = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SpinnerContainer\");\n$RefreshReg$(_c2, \"Spinner\");\n$RefreshReg$(_c3, \"SpinnerWithText\");\n$RefreshReg$(_c4, \"SpinnerText\");\n$RefreshReg$(_c5, \"LoadingSpinner\");","map":{"version":3,"names":["React","styled","keyframes","jsxDEV","_jsxDEV","spin","SpinnerContainer","div","size","_c","Spinner","theme","color","colors","secondary","primary","_c2","SpinnerWithText","spacing","_c3","SpinnerText","span","typography","fontSize","sm","text","fontWeight","medium","_c4","LoadingSpinner","className","spinnerElement","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/vincent.rs/git-vince/JacquesIA/client/src/components/UI/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SpinnerContainer = styled.div<{ size: string }>`\n  display: inline-block;\n  width: ${({ size }) => {\n    switch (size) {\n      case 'small': return '16px';\n      case 'medium': return '24px';\n      case 'large': return '32px';\n      case 'xl': return '48px';\n      default: return '24px';\n    }\n  }};\n  height: ${({ size }) => {\n    switch (size) {\n      case 'small': return '16px';\n      case 'medium': return '24px';\n      case 'large': return '32px';\n      case 'xl': return '48px';\n      default: return '24px';\n    }\n  }};\n`;\n\nconst Spinner = styled.div<{ color?: string }>`\n  width: 100%;\n  height: 100%;\n  border: 2px solid ${({ theme, color }) => color || theme.colors.secondary[200]};\n  border-top: 2px solid ${({ theme, color }) => color || theme.colors.primary[500]};\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst SpinnerWithText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing[3]};\n`;\n\nconst SpinnerText = styled.span`\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n`;\n\ninterface LoadingSpinnerProps {\n  size?: 'small' | 'medium' | 'large' | 'xl';\n  color?: string;\n  text?: string;\n  className?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'medium',\n  color,\n  text,\n  className,\n}) => {\n  const spinnerElement = (\n    <SpinnerContainer size={size} className={className}>\n      <Spinner color={color} />\n    </SpinnerContainer>\n  );\n\n  if (text) {\n    return (\n      <SpinnerWithText>\n        {spinnerElement}\n        <SpinnerText>{text}</SpinnerText>\n      </SpinnerWithText>\n    );\n  }\n\n  return spinnerElement;\n};\n\nexport default LoadingSpinner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}