{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n// Configuration axios par défaut\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Intercepteur pour ajouter le token aux requêtes\napi.interceptors.request.use(config => {\n  const token = useAuthStore.getState().token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    useAuthStore.getState().logout();\n    toast.error('Session expirée. Veuillez vous reconnecter.');\n  }\n  return Promise.reject(error);\n});\nexport const useAuthStore = create()(persist((set, get) => ({\n  // État initial\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  // Actions\n  login: async (username, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n\n      // Stocker le token dans localStorage\n      localStorage.setItem('jacques_ia_token', token);\n      toast.success(`Bienvenue, ${user.username} !`);\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Erreur lors de la connexion';\n      set({\n        isLoading: false,\n        error: errorMessage,\n        isAuthenticated: false,\n        user: null,\n        token: null\n      });\n      toast.error(errorMessage);\n      return false;\n    }\n  },\n  register: async (username, email, password) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await api.post('/auth/register', {\n        username,\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n\n      // Stocker le token dans localStorage\n      localStorage.setItem('jacques_ia_token', token);\n      toast.success('Compte créé avec succès !');\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Erreur lors de l\\'inscription';\n      set({\n        isLoading: false,\n        error: errorMessage,\n        isAuthenticated: false,\n        user: null,\n        token: null\n      });\n      toast.error(errorMessage);\n      return false;\n    }\n  },\n  googleAuth: async credential => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await api.post('/auth/google', {\n        credential\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n\n      // Stocker le token dans localStorage\n      localStorage.setItem('jacques_ia_token', token);\n      toast.success(`Bienvenue, ${user.username} !`);\n      return true;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Erreur lors de l\\'authentification Google';\n      set({\n        isLoading: false,\n        error: errorMessage,\n        isAuthenticated: false,\n        user: null,\n        token: null\n      });\n      toast.error(errorMessage);\n      return false;\n    }\n  },\n  logout: () => {\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      error: null\n    });\n\n    // Supprimer le token du localStorage\n    localStorage.removeItem('jacques_ia_token');\n    toast.success('Déconnexion réussie');\n  },\n  verifyToken: async () => {\n    const token = localStorage.getItem('jacques_ia_token');\n    if (!token) {\n      set({\n        isAuthenticated: false,\n        isLoading: false\n      });\n      return false;\n    }\n    set({\n      isLoading: true\n    });\n    try {\n      const response = await api.get('/auth/verify', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        user\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n      return true;\n    } catch (error) {\n      // Token invalide ou expiré\n      localStorage.removeItem('jacques_ia_token');\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      });\n      return false;\n    }\n  },\n  updateProfile: async data => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await api.put('/auth/profile', data);\n\n      // Mettre à jour l'utilisateur local\n      const currentUser = get().user;\n      if (currentUser) {\n        const updatedUser = {\n          ...currentUser,\n          ...data\n        };\n        set({\n          user: updatedUser,\n          isLoading: false,\n          error: null\n        });\n      }\n      toast.success('Profil mis à jour avec succès');\n      return true;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Erreur lors de la mise à jour du profil';\n      set({\n        isLoading: false,\n        error: errorMessage\n      });\n      toast.error(errorMessage);\n      return false;\n    }\n  },\n  clearError: () => {\n    set({\n      error: null\n    });\n  },\n  setLoading: loading => {\n    set({\n      isLoading: loading\n    });\n  }\n}), {\n  name: 'jacques-ia-auth',\n  partialize: state => ({\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated\n  })\n}));\n\n// Hook personnalisé pour l'API\nexport const useApi = () => {\n  return api;\n};\n\n// Types d'export","map":{"version":3,"names":["create","persist","axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","api","baseURL","timeout","interceptors","request","use","config","token","useAuthStore","getState","headers","Authorization","response","error","_error$response","status","logout","Promise","reject","set","get","user","isAuthenticated","isLoading","login","username","password","post","data","localStorage","setItem","success","_error$response2","_error$response2$data","errorMessage","register","email","_error$response3","_error$response3$data","googleAuth","credential","_error$response4","_error$response4$data","removeItem","verifyToken","getItem","updateProfile","put","currentUser","updatedUser","_error$response5","_error$response5$data","clearError","setLoading","loading","name","partialize","state","useApi"],"sources":["/Users/vincent.rs/git-vince/JacquesIA/client/src/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  preferences: {\n    theme: 'light' | 'dark';\n    language: string;\n    notifications: boolean;\n    autoSave: boolean;\n  };\n  created_at: string;\n  last_login?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\ninterface AuthActions {\n  login: (username: string, password: string) => Promise<boolean>;\n  register: (username: string, email: string, password: string) => Promise<boolean>;\n  googleAuth: (credential: string) => Promise<boolean>;\n  logout: () => void;\n  verifyToken: () => Promise<boolean>;\n  updateProfile: (data: Partial<User>) => Promise<boolean>;\n  clearError: () => void;\n  setLoading: (loading: boolean) => void;\n}\n\ntype AuthStore = AuthState & AuthActions;\n\n// Configuration axios par défaut\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Intercepteur pour ajouter le token aux requêtes\napi.interceptors.request.use((config) => {\n  const token = useAuthStore.getState().token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      useAuthStore.getState().logout();\n      toast.error('Session expirée. Veuillez vous reconnecter.');\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const useAuthStore = create<AuthStore>()(\n  persist(\n    (set, get) => ({\n      // État initial\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n      error: null,\n\n      // Actions\n      login: async (username: string, password: string) => {\n        set({ isLoading: true, error: null });\n        \n        try {\n          const response = await api.post('/auth/login', {\n            username,\n            password,\n          });\n\n          const { user, token } = response.data;\n\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null,\n          });\n\n          // Stocker le token dans localStorage\n          localStorage.setItem('jacques_ia_token', token);\n\n          toast.success(`Bienvenue, ${user.username} !`);\n          return true;\n\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.error || 'Erreur lors de la connexion';\n          \n          set({\n            isLoading: false,\n            error: errorMessage,\n            isAuthenticated: false,\n            user: null,\n            token: null,\n          });\n\n          toast.error(errorMessage);\n          return false;\n        }\n      },\n\n      register: async (username: string, email: string, password: string) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const response = await api.post('/auth/register', {\n            username,\n            email,\n            password,\n          });\n\n          const { user, token } = response.data;\n\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null,\n          });\n\n          // Stocker le token dans localStorage\n          localStorage.setItem('jacques_ia_token', token);\n\n          toast.success('Compte créé avec succès !');\n          return true;\n\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.error || 'Erreur lors de l\\'inscription';\n          \n          set({\n            isLoading: false,\n            error: errorMessage,\n            isAuthenticated: false,\n            user: null,\n            token: null,\n          });\n\n          toast.error(errorMessage);\n          return false;\n        }\n      },\n\n      googleAuth: async (credential: string) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const response = await api.post('/auth/google', {\n            credential,\n          });\n\n          const { user, token } = response.data;\n\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null,\n          });\n\n          // Stocker le token dans localStorage\n          localStorage.setItem('jacques_ia_token', token);\n\n          toast.success(`Bienvenue, ${user.username} !`);\n          return true;\n\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.error || 'Erreur lors de l\\'authentification Google';\n          \n          set({\n            isLoading: false,\n            error: errorMessage,\n            isAuthenticated: false,\n            user: null,\n            token: null,\n          });\n\n          toast.error(errorMessage);\n          return false;\n        }\n      },\n\n      logout: () => {\n        set({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          error: null,\n        });\n\n        // Supprimer le token du localStorage\n        localStorage.removeItem('jacques_ia_token');\n        \n        toast.success('Déconnexion réussie');\n      },\n\n      verifyToken: async () => {\n        const token = localStorage.getItem('jacques_ia_token');\n        \n        if (!token) {\n          set({ isAuthenticated: false, isLoading: false });\n          return false;\n        }\n\n        set({ isLoading: true });\n\n        try {\n          const response = await api.get('/auth/verify', {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n\n          const { user } = response.data;\n\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null,\n          });\n\n          return true;\n\n        } catch (error: any) {\n          // Token invalide ou expiré\n          localStorage.removeItem('jacques_ia_token');\n          \n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            isLoading: false,\n            error: null,\n          });\n\n          return false;\n        }\n      },\n\n      updateProfile: async (data: Partial<User>) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const response = await api.put('/auth/profile', data);\n\n          // Mettre à jour l'utilisateur local\n          const currentUser = get().user;\n          if (currentUser) {\n            const updatedUser = { ...currentUser, ...data };\n            set({\n              user: updatedUser,\n              isLoading: false,\n              error: null,\n            });\n          }\n\n          toast.success('Profil mis à jour avec succès');\n          return true;\n\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.error || 'Erreur lors de la mise à jour du profil';\n          \n          set({\n            isLoading: false,\n            error: errorMessage,\n          });\n\n          toast.error(errorMessage);\n          return false;\n        }\n      },\n\n      clearError: () => {\n        set({ error: null });\n      },\n\n      setLoading: (loading: boolean) => {\n        set({ isLoading: loading });\n      },\n    }),\n    {\n      name: 'jacques-ia-auth',\n      partialize: (state) => ({\n        user: state.user,\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n      }),\n    }\n  )\n);\n\n// Hook personnalisé pour l'API\nexport const useApi = () => {\n  return api;\n};\n\n// Types d'export\nexport type { AuthStore };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}